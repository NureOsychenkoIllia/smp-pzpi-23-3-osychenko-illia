МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
Кафедра програмної інженерії
Звіт
з лабораторної роботи № 2
з дисципліни: «Скриптові мови програмування»
Виконав:
ст. гр. ПЗПІ-23-3
Осиченко І.О.
Перевірив:
ст. викл. каф. ПІ
Сокорчук І. П.
Харків – 2025

1.1 Постановка задачі
Потрібно створити консольний застосунок «Продовольчий магазин «Весна»».
Програма після запуску повинна вивести на термінал перелік можливих дій:
– Вибрати товари
– Отримати підсумковий рахунок
– Налаштувати свій профіль
– Вийти з програми
Програма має виконувати наступні функції:
– Відображати перелік товарів, де кожен рядок складається з номера, назви
товару і його вартості
– Додавати товари у кошик за вказаним номером та кількістю
– Видаляти товари з кошика (встановлюючи кількість «0»)
– Формувати підсумковий рахунок з інформацією про номер, назву, ціну,
кількість та вартість кожного товару
– Встановлювати профіль користувача (ім'я та вік)
– Перевіряти вхідні дані: наявність пункту меню та товару, валідність
кількості товару, наявність літер в імені користувача, відповідність віку
користувача допустимому діапазону (7-150 років)

1.2 Хід роботи
1.2.1 Створення PHP-скрипта
Створимо відповідний файл скрипта, в якому реалізовуватимемо функціонал
магазину. Для цього відкриємо термінал та виконаємо команду:
 touch pzpi-23-3-osychenko-illia-task3.php

1.2.2 Ініціалізація даних та створення допоміжних функцій
Створимо масив з даними про продукти та порожній масив для кошика користувача:
 3 $products = [
 4 1 => ["Молоко пастеризоване", 12],
 5 2 => ["Хліб чорний", 9],
 6 3 => ["Сир білий", 21],
 7 4 => ["Сметана 20%", 25],
 8 5 => ["Кефір 1%", 19],
 9 6 => ["Вода газована", 18],
10 7 => ['Печиво "Весна"', 14],
11 ];
12 
13 $basket = [];
14 
15 $userProfile = ['name' => null, 'age' => null];

Реалізуємо допоміжну функцію readInput для зчитування введення користувача:
17 function readInput($prompt = "")
18 {
19 if ($prompt) {
20 echo $prompt;
21 }
22 $handle = fopen("php://stdin", "r");
23 $line = fgets($handle);
24 return trim($line);
25 }

Для коректного форматування виводу в консоль з українською мовою, необхідно
створити функцію для підрахунку довжини рядка з урахуванням багатобайтових
символів, оскільки стандартна функція strlen рахує кількість байтів, а не символів.
Оскільки на сервері немає доступу до функції mb_strlen, створимо власну функцію
ua_strlen:
27 function ua_strlen($str) {
28 $length = 0;
29 $i = 0;
30 $len = strlen($str);
31 while ($i < $len) {
32 $byte = ord($str[$i]);
33 if ($byte < 128) {
34 $length++;
35 $i++;
36 } elseif ($byte >= 192 && $byte < 224) { # українська
літера >= 128 <= 224
37 $length++;
38 $i += 2;
39 } else {
40 $i++;
41 $length++;
42 }
43 }
44 return $length;
45 }

Ця функція аналізує байти рядка і правильно рахує українські символи, які займають
2 байти в кодуванні UTF-8. Це необхідно для правильного форматування таблиць
при виведенні.

1.2.3 Створення функції виведення головного меню
Реалізуємо функцію для виведення головного меню програми:
47 function showMainMenu()
48 {
49 echo "################################\n";
50 echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
51 echo "################################\n";
52 echo "1 Вибрати товари\n";
53 echo "2 Отримати підсумковий рахунок\n";
54 echo "3 Налаштувати свій профіль\n";
55 echo "0 Вийти з програми\n";
56 }

1.2.4 Реалізація функції вибору та додавання товарів
Створимо функцію productSelection для вибору товарів та їх додавання до кошика:
 58 function productSelection(&$products, &$basket)
 59 {
 60 while (true) {
 61 showProducts($products);
 62 $prodInput = readInput("Виберіть товар: ");
 63 if (!is_numeric($prodInput)) {
 64 echo "ПОМИЛКА! Введено не число.\n";
 65 continue;
 66 }
 67 $prodNum = (int)$prodInput;
 68 if ($prodNum === 0) {
 69 break;
 70 }
 71 if (!isset($products[$prodNum])) {
 72 echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
 73 continue;
 74 }
 75 
 76 echo "Вибрано: " . $products[$prodNum][0] . "\n";
 77 $qtyInput = readInput("Введіть кількість, штук: ");
 78 if (!is_numeric($qtyInput)) {
 79 echo "ПОМИЛКА! Кількість має бути числом.\n";
 80 continue;
 81 }
 82 $quantity = (int)$qtyInput;
 83 if ($quantity === 0) {
 84 if (isset($basket[$prodNum])) {
 85 unset($basket[$prodNum]);
 86 echo "ВИДАЛЯЮ З КОШИКА\n";
 87 } else {
 88 echo "Товар \"" . $products[$prodNum][0] . "\"
відсутній у кошику.\n";
 89 }
 90 showBasket($basket);
 91 continue;
 92 }
 93 if ($quantity < 0 || $quantity >= 100) {
 94 echo "ПОМИЛКА! Кількість має бути від 1 до 99.\n";
 95 continue;
 96 }
 97 
 98 $basket[$prodNum] = [
 99 'name' => $products[$prodNum][0],
100 'price' => $products[$prodNum][1],
101 'quantity' => $quantity,
102 ];
103 showBasket($basket);
104 }
105 }

Ця функція використовує нескінченний цикл while, з якого можна вийти, ввівши
«0». Вона перевіряє валідність введених даних (чи є ввід числом, чи існує товар з
таким номером, чи є кількість дійсним числом від 1 до 99). При введенні кількості
«0» відбувається видалення товару з кошика. Після кожної операції з кошиком
виводиться його вміст.

1.2.5 Реалізація функції відображення кошика
Створимо функцію для відображення вмісту кошика:
107 function showBasket($basket)
108 {
109 if (empty($basket)) {
110 echo "КОШИК ПОРОЖНІЙ\n";
111 return;
112 }
113 
114 $NAME_COL_WIDTH = 22;
115 $QTY_COL_WIDTH = 10;
116 
117 echo "У КОШИКУ:\n";
118 echo "НАЗВА";
119 for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
120 echo ' ';
121 }
122 echo "КІЛЬКІСТЬ\n";
123 
124 foreach ($basket as $item) {
125 echo $item['name'];
126 $name_length = ua_strlen($item['name']);
127 for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
128 echo ' ';
129 }
130 
131 echo $item['quantity'] . "\n";
132 }
133 }

Ця функція перевіряє, чи не порожній кошик, і виводить заголовок та вміст кошика з
вирівнюванням стовпців. Для вирівнювання та доповнення рядка використовується
функція ua_strlen.

1.2.6 Реалізація функції формування чека
Створимо функцію для формування та виведення підсумкового чеку:
135 function getReceipt($basket)
136 {
137 if (empty($basket)) {
138 echo "КОШИК ПОРОЖНІЙ\n";
139 return;
140 }
141 
142 $NAME_COL_WIDTH = 22;
143 $PRICE_COL_WIDTH = 6;
144 $QTY_COL_WIDTH = 10;
145 
146 echo "\nЧек:\n";
147 echo "№ НАЗВА";
148 for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
149 echo ' ';
150 }
151 echo "ЦІНА";
152 for ($i = 4; $i < $PRICE_COL_WIDTH; $i++) {
153 echo ' ';
154 }
155 echo "КІЛЬКІСТЬ ВАРТІСТЬ\n";
156 
157 $counter = 1;
158 $total = 0;
159 
160 foreach ($basket as $item) {
161 $itemCost = $item['price'] * $item['quantity'];
162 
163 echo $counter . " ";
164 
165 echo $item['name'];
166 $name_length = ua_strlen($item['name']);
167 for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
168 echo ' ';
169 }
170 
171 $price_str = (string)$item['price'];
172 echo $price_str;
173 $price_length = ua_strlen($price_str);
174 for ($j = $price_length; $j < $PRICE_COL_WIDTH; $j++) {
175 echo ' ';
176 }
177 
178 $qty_str = (string)$item['quantity'];
179 echo $qty_str;
180 $qty_length = ua_strlen($qty_str);
181 for ($j = $qty_length; $j < $QTY_COL_WIDTH; $j++) {
182 echo ' ';
183 }
184 
185 echo $itemCost;
186 
187 echo "\n";
188 $total += $itemCost;
189 $counter++;
190 }
191 
192 echo "РАЗОМ ДО CПЛАТИ: " . $total . "\n";
193 }

Ця функція виводить чек, який містить номер, назву, ціну, кількість та вартість
кожного товару, а також загальну суму до сплати. Знову ж, для правильного
форматування використовується функція ua_strlen.

1.2.7 Реалізація функції відображення списку товарів
Створимо функцію для відображення списку доступних товарів:
195 function showProducts(array $products)
196 {
197 $NAME_COL_WIDTH = 22;
198 $PRICE_COL_WIDTH = 4;
199 
200 echo "Список товарів:\n";
201 echo "№ НАЗВА";
202 for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
203 echo ' ';
204 }
205 echo "ЦІНА\n";
206 
207 $keys = array_keys($products);
208 for ($i = 0; $i < count($keys); $i++) {
209 $number = $keys[$i];
210 $prod = $products[$number];
211 $name = $prod[0];
212 $price = $prod[1];
213 
214 echo $number . " ";
215 
216 echo $name;
217 $name_length = ua_strlen($name);
218 for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
219 echo ' ';
220 }
221 
222 $price_str = (string)$price;
223 echo $price_str;
224 $price_length = ua_strlen($price_str);
225 for ($j = $price_length; $j < $PRICE_COL_WIDTH; $j++) {
226 echo ' ';
227 }
228 echo "\n";
229 }
230 
231 echo " -----------\n";
232 echo "0 ПОВЕРНУТИСЯ\n";
233 }

Ця функція виводить список товарів з номерами, назвами та цінами. Вона також
виводить опцію «0 ПОВЕРНУТИСЯ» для повернення до головного меню.

1.2.8 Реалізація функції налаштування профілю
Створимо функцію для встановлення та перевірки профілю користувача:
235 function setProfile(&$userProfile)
236 {
237 while (true) {
238 $name = readInput("Ваше імʼя: ");
239 if (strlen(trim($name)) == 0 || !preg_match('/\p{L}/u',
$name)) {
240 echo "Імʼя користувача не може бути порожнім і
повинно містити хоча б одну літеру.\n";
241 } else {
242 $userProfile['name'] = $name;
243 break;
244 }
245 }
246 while (true) {
247 $ageInput = readInput("Ваш вік: ");
248 if (!is_numeric($ageInput)) {
249 echo "Вік має бути числовим значенням.\n";
250 continue;
251 }
252 $age = (int)$ageInput;
253 if ($age < 7 || $age > 150) {
254 echo "Користувач не може бути молодшим 7-ми або
старшим 150-ти років.\n";
255 } else {
256 $userProfile['age'] = $age;
257 break;
258 }
259 }
260 echo "Профіль встановлено: " . $userProfile['name'] . " (" .
$userProfile['age'] . " років)\n";
261 }

Ця функція запитує ім'я та вік користувача та перевіряє їх валідність. Ім'я повинно
містити хоча б одну літеру (для цього використовується регулярний вираз з класом
\p{L}, який відповідає будь-якій літері в будь-якому алфавіті, з модифікатором u
для підтримки Unicode). Вік повинен бути числом від 7 до 150.

1.2.9 Головний цикл програми
Створимо головний цикл програми, який буде виводити меню та очікувати команди
від користувача:
263 while (true) {
264 showMainMenu();
265 $command = readInput("Введіть команду: ");
266 if (!is_numeric($command)) {
267 echo "ПОМИЛКА! Введіть правильну команду\n";
268 continue;
269 }
270 $cmd = (int)$command;
271 if (!in_array($cmd, [0, 1, 2, 3])) {
272 echo "ПОМИЛКА! Введіть правильну команду\n";
273 continue;
274 }
275 switch ($cmd) {
276 case 1:
277 productSelection($products, $basket);
278 break;
279 case 2:
280 getReceipt($basket);
281 break;
282 case 3:
283 setProfile($userProfile);
284 break;
285 case 0:
286 echo "Вихід з програми. До побачення!\n";
287 exit(0);
288 }
289 }

Головний цикл програми відображає меню, зчитує введену команду, перевіряє її
валідність і викликає відповідну функцію залежно від обраного пункту меню.
Програма завершує роботу лише тоді, коли користувач вводить команду «0».

1.2.10 Тестування програми
Виконаємо тестування програми для перевірки її функціональності:
а) Запускаємо програму:
php pzpi-23-3-osychenko-illia-task3.php

б) Бачимо головне меню:
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: 

в) Вибираємо команду «1» для вибору товарів:
Список товарів:
№ НАЗВА ЦІНА
1 Молоко пастеризоване 12 
2 Хліб чорний 9 
3 Сир білий 21 
4 Сметана 20% 25 
5 Кефір 1% 19 
6 Вода газована 18 
7 Печиво "Весна" 14 
 -----------
0 ПОВЕРНУТИСЯ
Виберіть товар: 

г) Обираємо товар «2» (Хліб чорний) та вказуємо кількість «1»:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 1
У КОШИКУ:
НАЗВА КІЛЬКІСТЬ
Хліб чорний 1

д) Обираємо товар «1» (Молоко пастеризоване) та вказуємо кількість «2»:
Виберіть товар: 1
Вибрано: Молоко пастеризоване
Введіть кількість, штук: 2
У КОШИКУ:
НАЗВА КІЛЬКІСТЬ
Хліб чорний 1
Молоко пастеризоване 2

е) Тестуємо видалення товару, вказавши кількість «0»:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
У КОШИКУ:
НАЗВА КІЛЬКІСТЬ
Молоко пастеризоване 2

ж) Повертаємось до головного меню:
Виберіть товар: 0

и) Вибираємо команду «2» для отримання чека:
Введіть команду: 2
Чек:
№ НАЗВА ЦІНА КІЛЬКІСТЬ ВАРТІСТЬ
1 Молоко пастеризоване 12 2 24
РАЗОМ ДО CПЛАТИ: 24

к) Тестуємо налаштування профілю:
Введіть команду: 3
Ваше імʼя: Ілля
Ваш вік: 25
Профіль встановлено: Ілля (25 років)

л) Тестуємо вихід з програми:
Введіть команду: 0
Вихід з програми. До побачення!

Всі тести пройшли успішно. Програма коректно відображає меню, додає та
видаляє товари з кошика, формує чек, встановлює профіль користувача та коректно
перевіряє вхідні дані.

Висновок
У ході виконання лабораторної роботи було розроблено консольний застосунок
«Продовольчий магазин «Весна»» мовою PHP. Програма успішно реалізує
всі необхідні функції, включаючи відображення списку товарів, додавання та
видалення товарів з кошика, формування підсумкового рахунку, налаштування
профілю користувача та перевірку вхідних даних.

Особливу увагу було приділено коректному форматуванню виводу з
підтримкою української мови, для чого була створена власна функція ua_strlen,
яка правильно рахує довжину рядка з багатобайтовими символами, оскільки на
сервері немає доступу до функції mb_strlen. Це дозволило досягти якісного
форматування таблиць у консольному інтерфейсі програми.

Програма також реалізує необхідні перевірки вхідних даних: наявність
обраного пункту меню, існування товару з вказаним номером, валідність кількості
товару, наявність хоча б однієї літери в імені користувача та відповідність віку
допустимому діапазону. Всі ці перевірки разом з інформативними повідомленнями
про помилки підвищують зручність використання програми.

ДОДАТОК А
Код створеного скрипту
  1 <?php
  2 
  3 $products = [
  4     1 => ["Молоко пастеризоване", 12],
  5     2 => ["Хліб чорний", 9],
  6     3 => ["Сир білий", 21],
  7     4 => ["Сметана 20%", 25],
  8     5 => ["Кефір 1%", 19],
  9     6 => ["Вода газована", 18],
 10     7 => ['Печиво "Весна"', 14],
 11 ];
 12 
 13 $basket = [];
 14 
 15 $userProfile = ['name' => null, 'age' => null];
 16 
 17 function readInput($prompt = "")
 18 {
 19     if ($prompt) {
 20         echo $prompt;
 21     }
 22     $handle = fopen("php://stdin", "r");
 23     $line = fgets($handle);
 24     return trim($line);
 25 }
 26 
 27 function ua_strlen($str) {
 28     $length = 0;
 29     $i = 0;
 30     $len = strlen($str);
 31     while ($i < $len) {
 32         $byte = ord($str[$i]);
 33         if ($byte < 128) {
 34             $length++;
 35             $i++;
 36         } elseif ($byte >= 192 && $byte < 224) { # українська літера >= 128 <= 224
 37             $length++;
 38             $i += 2;
 39         } else {
 40             $i++;
 41             $length++;
 42         }
 43     }
 44     return $length;
 45 }
 46 
 47 function showMainMenu()
 48 {
 49     echo "################################\n";
 50     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
 51     echo "################################\n";
 52     echo "1 Вибрати товари\n";
 53     echo "2 Отримати підсумковий рахунок\n";
 54     echo "3 Налаштувати свій профіль\n";
 55     echo "0 Вийти з програми\n";
 56 }
 57 
 58 function productSelection(&$products, &$basket)
 59 {
 60     while (true) {
 61         showProducts($products);
 62         $prodInput = readInput("Виберіть товар: ");
 63         if (!is_numeric($prodInput)) {
 64             echo "ПОМИЛКА! Введено не число.\n";
 65             continue;
 66         }
 67         $prodNum = (int)$prodInput;
 68         if ($prodNum === 0) {
 69             break;
 70         }
 71         if (!isset($products[$prodNum])) {
 72             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
 73             continue;
 74         }
 75 
 76         echo "Вибрано: " . $products[$prodNum][0] . "\n";
 77         $qtyInput = readInput("Введіть кількість, штук: ");
 78         if (!is_numeric($qtyInput)) {
 79             echo "ПОМИЛКА! Кількість має бути числом.\n";
 80             continue;
 81         }
 82         $quantity = (int)$qtyInput;
 83         if ($quantity === 0) {
 84             if (isset($basket[$prodNum])) {
 85                 unset($basket[$prodNum]);
 86                 echo "ВИДАЛЯЮ З КОШИКА\n";
 87             } else {
 88                 echo "Товар \"" . $products[$prodNum][0] . "\" відсутній у кошику.\n";
 89             }
 90             showBasket($basket);
 91             continue;
 92         }
 93         if ($quantity < 0 || $quantity >= 100) {
 94             echo "ПОМИЛКА! Кількість має бути від 1 до 99.\n";
 95             continue;
 96         }
 97 
 98         $basket[$prodNum] = [
 99             'name'     => $products[$prodNum][0],
100             'price'    => $products[$prodNum][1],
101             'quantity' => $quantity,
102         ];
103         showBasket($basket);
104     }
105 }
106 
107 function showBasket($basket)
108 {
109     if (empty($basket)) {
110         echo "КОШИК ПОРОЖНІЙ\n";
111         return;
112     }
113     
114     $NAME_COL_WIDTH = 22;
115     $QTY_COL_WIDTH = 10;
116     
117     echo "У КОШИКУ:\n";
118     echo "НАЗВА";
119     for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
120         echo ' ';
121     }
122     echo "КІЛЬКІСТЬ\n";
123     
124     foreach ($basket as $item) {
125         echo $item['name'];
126         $name_length = ua_strlen($item['name']);
127         for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
128             echo ' ';
129         }
130         
131         echo $item['quantity'] . "\n";
132     }
133 }
134 
135 function getReceipt($basket)
136 {
137     if (empty($basket)) {
138         echo "КОШИК ПОРОЖНІЙ\n";
139         return;
140     }
141     
142     $NAME_COL_WIDTH = 22;
143     $PRICE_COL_WIDTH = 6;
144     $QTY_COL_WIDTH = 10;
145     
146     echo "\nЧек:\n";
147     echo "№  НАЗВА";
148     for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
149         echo ' ';
150     }
151     echo "ЦІНА";
152     for ($i = 4; $i < $PRICE_COL_WIDTH; $i++) {
153         echo ' ';
154     }
155     echo "КІЛЬКІСТЬ  ВАРТІСТЬ\n";
156     
157     $counter = 1;
158     $total = 0;
159     
160     foreach ($basket as $item) {
161         $itemCost = $item['price'] * $item['quantity'];
162         
163         echo $counter . "  ";
164         
165         echo $item['name'];
166         $name_length = ua_strlen($item['name']);
167         for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
168             echo ' ';
169         }
170         
171         $price_str = (string)$item['price'];
172         echo $price_str;
173         $price_length = ua_strlen($price_str);
174         for ($j = $price_length; $j < $PRICE_COL_WIDTH; $j++) {
175             echo ' ';
176         }
177         
178         $qty_str = (string)$item['quantity'];
179         echo $qty_str;
180         $qty_length = ua_strlen($qty_str);
181         for ($j = $qty_length; $j < $QTY_COL_WIDTH; $j++) {
182             echo ' ';
183         }
184         
185         echo $itemCost;
186         
187         echo "\n";
188         $total += $itemCost;
189         $counter++;
190     }
191     
192     echo "РАЗОМ ДО CПЛАТИ: " . $total . "\n";
193 }
194 
195 function showProducts(array $products)
196 {
197     $NAME_COL_WIDTH = 22;
198     $PRICE_COL_WIDTH = 4;
199 
200     echo "Список товарів:\n";
201     echo "№  НАЗВА";
202     for ($i = 5; $i < $NAME_COL_WIDTH; $i++) {
203         echo ' ';
204     }
205     echo "ЦІНА\n";
206 
207     $keys = array_keys($products);
208     for ($i = 0; $i < count($keys); $i++) {
209         $number = $keys[$i];
210         $prod = $products[$number];
211         $name = $prod[0];
212         $price = $prod[1];
213 
214         echo $number . "  ";
215 
216         echo $name;
217         $name_length = ua_strlen($name);
218         for ($j = $name_length; $j < $NAME_COL_WIDTH; $j++) {
219             echo ' ';
220         }
221 
222         $price_str = (string)$price;
223         echo $price_str;
224         $price_length = ua_strlen($price_str);
225         for ($j = $price_length; $j < $PRICE_COL_WIDTH; $j++) {
226             echo ' ';
227         }
228         echo "\n";
229     }
230 
231     echo "   -----------\n";
232     echo "0  ПОВЕРНУТИСЯ\n";
233 }
234 
235 function setProfile(&$userProfile)
236 {
237     while (true) {
238         $name = readInput("Ваше імʼя: ");
239         if (strlen(trim($name)) == 0 || !preg_match('/\p{L}/u', $name)) {
240             echo "Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.\n";
241         } else {
242             $userProfile['name'] = $name;
243             break;
244         }
245     }
246     while (true) {
247         $ageInput = readInput("Ваш вік: ");
248         if (!is_numeric($ageInput)) {
249             echo "Вік має бути числовим значенням.\n";
250             continue;
251         }
252         $age = (int)$ageInput;
253         if ($age < 7 || $age > 150) {
254             echo "Користувач не може бути молодшим 7-ми або старшим 150-ти років.\n";
255         } else {
256             $userProfile['age'] = $age;
257             break;
258         }
259     }
260     echo "Профіль встановлено: " . $userProfile['name'] . " (" . $userProfile['age'] . " років)\n";
261 }
262 
263 while (true) {
264     showMainMenu();
265     $command = readInput("Введіть команду: ");
266     if (!is_numeric($command)) {
267         echo "ПОМИЛКА! Введіть правильну команду\n";
268         continue;
269     }
270     $cmd = (int)$command;
271     if (!in_array($cmd, [0, 1, 2, 3])) {
272         echo "ПОМИЛКА! Введіть правильну команду\n";
273         continue;
274     }
275     switch ($cmd) {
276         case 1:
277             productSelection($products, $basket);
278             break;
279         case 2:
280             getReceipt($basket);
281             break;
282         case 3:
283             setProfile($userProfile);
284             break;
285         case 0:
286             echo "Вихід з програми. До побачення!\n";
287             exit(0);
288     }
289 }
```
